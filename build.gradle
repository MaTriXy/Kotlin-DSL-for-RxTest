group 'com.rubylichtenstein'
version '1.0.5'

buildscript {
    ext.kotlin_version = '1.2.10'
    ext.detekt_version = '1.0.0.RC6'

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://dl.bintray.com/jetbrains/spek" }
    }
    dependencies {
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: "jacoco"
apply plugin: "io.gitlab.arturbosch.detekt"

repositories {
    jcenter()
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
    details 'tree'

}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'io.reactivex.rxjava2:rxjava:2.1.7'

    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testCompile('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }

    testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }

    testRuntime('org.junit.platform:junit-platform-runner:1.0.0')
    testCompile 'org.junit.platform:junit-platform-console:1.0.0'

    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}

detekt {
    version = "$detekt_version"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$projectDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

artifacts {
    archives sourcesJar
//    archives javadocJar
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/libs/rxtest-" + version + ".pom")
    }
}
